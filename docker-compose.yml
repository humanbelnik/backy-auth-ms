version: "3.9"

services:
    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4
        restart: always
        env_file:
            .env
        environment:
          PGADMIN_DEFAULT_EMAIL: admin@admin.com
          PGADMIN_DEFAULT_PASSWORD: admin
        ports:
            - "5050:80"
        depends_on:
            - postgres
        networks:
            - backend

    postgres:
        container_name: postgres_container
        image: postgres:15
        env_file:
            .env
        environment:
            POSTGRES_DB: auth-ms-db
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
        volumes:
            - ./pg_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - backend

    backy-auth-ms:
        container_name: backy_auth_ms_container
        build:
          context: .
        ports:
            - "8080:8080"
        env_file:
            .env
        depends_on:
            - postgres
        networks:
            - backend

volumes:
  pg_data:

networks:
  backend:
    driver: bridge

# version: '3.9'
# services:
#   app:
#     container_name: golang_container
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=${DB_NAME}
#       - DATABASE_HOST=${DB_HOST}
#       - DATABASE_PORT=${DB_PORT}
#       - TEST_POSTGRES_USER=${TEST_DB_USER}
#       - TEST_POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
#       - TEST_POSTGRES_DB=${TEST_DB_NAME}
#       - TEST_DATABASE_HOST=${TEST_DB_HOST}
#       - TEST_DATABASE_PORT=${TEST_DB_PORT}
#     tty: true
#     build: .
#     ports:
#       - 8000:8080
#     restart: on-failure
#     volumes:
#       - .:/app
#     depends_on:
#       - postgresdb
#     networks:
#       - learning

#   postgresdb:
#     image: postgres:latest
#     container_name: postgres_container
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=${DB_NAME}
#       - DATABASE_HOST=${DB_HOST}
#     ports:
#       - '1234:5432'
#     volumes:
#       - ./pg_data:/var/lib/postgresql/data
#     networks:
#       - learning

#   postgresdb_test:
#     image: postgres:latest
#     container_name: postgres_test_container
#     environment:
#       - POSTGRES_USER=${TEST_DB_USER}
#       - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
#       - POSTGRES_DB=${TEST_DB_NAME}
#       - DATABASE_HOST=${TEST_DB_HOST}
#     ports:
#       - '4568:5432'
#     volumes:
#       - ./pg_data_test:/var/lib/postgresql/data
#     networks:
#       - learning

# volumes:
#   pg_data:
#   pg_data_test:

# # Networks to be created to facilitate communication between containers
# networks:
#   learning:
#     driver: bridge